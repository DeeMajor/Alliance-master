@model Accommodation.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>AdminLTE 2 | Registration Page</title>
        <!-- Tell the browser to be responsive to screen width -->
        <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
        <!-- Bootstrap 3.3.7 -->
        <link href="~/Styles/bower_components/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
        <!-- Font Awesome -->
        <link href="~/Styles/bower_components/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
        <!-- Ionicons -->
        <link href="~/Styles/bower_components/Ionicons/css/ionicons.min.css" rel="stylesheet" />
        <!-- Theme style -->
        <link href="~/Styles/dist/css/AdminLTE.min.css" rel="stylesheet" />
        <!-- iCheck -->
        <link href="~/Styles/plugins/iCheck/square/blue.css" rel="stylesheet" />

        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
        <!-- Google Font -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">

        <script>
            function displayText(x) {
                if (x == 0)
                    document.getElementById("idd").style.display = "block";
                else
                    document.getElementById("idd").style.display = "none";
                return;
            }
        </script>
    </head>


<body class="hold-transition register-page">
    <div class="register-box">
        @*<div class="register-logo">
            <a href="../../index2.html"><b>Admin</b>LTE</a>
        </div>*@
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="register-box-body">
                <p class="login-box-msg">Register a new membership</p>

                <form action="https://adminlte.io/themes/AdminLTE/index.html" method="post">
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @placeholder = "First Name" })
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @placeholder = "Cell Number" })
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-earphone form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.Gender, new { @class = "form-control", @placeholder = "Gender" })
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-earphone form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.AltContactNumber, new { @class = "form-control", @placeholder = "Alternative Number" })
                        @Html.ValidationMessageFor(m => m.AltContactNumber, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-earphone form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.IDNumber, new { @class = "form-control", @placeholder = "ID Number" })
                        @Html.ValidationMessageFor(m => m.IDNumber, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        Landlord
                        <input id="Type" name="Type" value="Landlord" type="radio" onclick="displayText(0)">
                        Tenant
                        <input id="Type" name="Type" value="Tenant" type="radio" onclick="displayText(1)">
                        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.TextBoxFor(m => m.FileName, new { @class = "form-control", @placeholder = "FileName" })
                        @Html.ValidationMessageFor(m => m.FileName, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    </div>
                    <br />
                    <div class="row text-center">
                        <input type="submit" class="btn btn-primary btn-block btn-flat" value="Create Account" />
                        <br />
                        <p class="pull-left">
                            <a href="@Url.Action("Login","Account")">
                                Login in here if you already have an account
                            </a>
                        </p>
                    </div>
                </form>
            </div>
        }
        <!-- /.form-box -->
    </div>

    <!-- /.register-box -->
    <!-- jQuery 3 -->
    <script src="~/Styles/bower_components/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap 3.3.7 -->
    <script src="~/Styles/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- iCheck -->
    <script src="~/Styles/plugins/iCheck/icheck.min.js"></script>
    <script>
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });
    </script>
</body>
